name: Build & deploy
run-name: Deploy to ${{inputs.environment}} ${{inputs.release_version}} by @${{github.actor}}

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'development'
        description: Choose target environment
        type: choice
        options:
          - development
          - systest
          - stage
          - production

      release_version:
        required: true
        default: 'patch'
        description: Choose release version
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  version:
    name: "Increment version by ${{github.event.inputs.release_version}}"
    if: ${{github.ref_name=='master' && github.event.inputs.environment=='production'}}
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{steps.newVersion.outputs.releaseVersion}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Parse current version
      run: |
        CURRENT_VERSION=$(git describe --tags --abbrev=0)
        major=$(echo $CURRENT_VERSION | cut -d. -f1)
        echo "major=${major}" >> $GITHUB_ENV
        minor=$(echo $CURRENT_VERSION | cut -d. -f2)
        echo "minor=${minor}" >> $GITHUB_ENV
        patch=$(echo $CURRENT_VERSION | cut -d. -f3)
        echo "patch=${patch}" >> $GITHUB_ENV
        echo "Current version $major.$minor.$patch"

    - name: Increment version by major
      if: ${{github.event.inputs.release_version=='major'}}
      run: |
        NEW_VERSION=$(echo "$(($major+1)).$minor.$patch")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: Increment version by minor
      if: ${{github.event.inputs.release_version=='minor'}}
      run: |
        NEW_VERSION=$(echo "$major.$(($minor+1)).$patch")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: Increment version by patch
      if: ${{github.event.inputs.release_version=='patch'}}
      run: |
        NEW_VERSION=$(echo "$major.$minor.$(($patch+1))")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: New version
      id: newVersion
      run: echo "releaseVersion=$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    needs:
      - version
    runs-on: ubuntu-latest
    env:
      NEW_VERSION: ${{needs.version.outputs.NEW_VERSION}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Read the build job output
        run: echo "$NEW_VERSION"
    
      - name: Update version in POM
        run: mvn versions:set -DnewVersion=$NEW_VERSION

      - name: Create a new tag
        run: |
          git config user.email "robertasvi@users.noreply.github.com"
          git config user.name "robertasvi"
          git add -A
          git commit -a -m "Version increment $NEW_VERSION"
          git push origin master
          git tag $NEW_VERSION
          git push --follow-tags
          git push --tags

      - name: Build with Maven
        run: mvn -B package --file pom.xml
    