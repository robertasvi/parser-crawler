name: Build, test & deploy
run-name: ${{github.event_name}} ${{github.event.pull_request.base.ref}} - ${{github.event.inputs.environment||'development'}} - ${{github.actor}}

env:
  target_environment: ${{github.event.inputs.environment||'development'}}
  branch: ${{github.ref_name}}
  version_type: ${{github.event.inputs.version_type||'development'}}

on:
  pull_request:
    branches: [development, release, master]
  push:
    branches: ['AWP-**']

  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'development'
        description: Choose target environment
        type: choice
        options:
          - development
          - systest
          - stage
          - production

      version_type:
        required: true
        default: 'development'
        description: Choose release version
        type: choice
        options:
          - major
          - minor
          - patch
          - development

jobs:
  version:
    name: "Increment ${{inputs.version_type||'development'}} version"
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{steps.newVersion.outputs.releaseVersion}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Parse current version
      run: |
        CURRENT_VERSION=$(git describe --tags --abbrev=0)
        major=$(echo $CURRENT_VERSION | cut -d. -f1)
        echo "major=${major}" >> $GITHUB_ENV
        minor=$(echo $CURRENT_VERSION | cut -d. -f2)
        echo "minor=${minor}" >> $GITHUB_ENV
        patch=$(echo $CURRENT_VERSION | cut -d. -f3)
        echo "patch=${patch}" >> $GITHUB_ENV
        echo "Current version $major.$minor.$patch"

    - name: Increment major version
      if: ${{env.version_type=='major'&&github.ref_name=='master'&&env.target_environment=='production'}}
      run: |
        NEW_VERSION=$(echo "$(($major+1)).0.0")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: Increment minor version
      if: ${{env.version_type=='minor'&&github.ref_name=='master'&&env.target_environment=='production'}}
      run: |
        NEW_VERSION=$(echo "$major.$(($minor+1)).0")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: Increment patch version
      if: ${{env.version_type=='patch'&&github.ref_name=='master'&&env.target_environment=='production'}}
      run: |
        NEW_VERSION=$(echo "$major.$minor.$(($patch+1))")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
    
    - name: Increment development version
      if: ${{(github.event_name=='pull_request'||github.event_name=='push'||github.event_name=='workflow_dispatch')||env.version_type=='development'&&(env.target_environment=='development'||env.target_environment=='systest')}}
      run: |
        NEW_VERSION=$(echo "$major.$minor.$patch.$(date +'%Y%m%d-%H%M%S')")
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

    - name: New version ${{env.NEW_VERSION}}
      id: newVersion
      run: echo "releaseVersion=$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    name: "Build version ${{needs.version.outputs.NEW_VERSION}}"
    needs:
      - version
    runs-on: ubuntu-latest
    env:
      NEW_VERSION: ${{needs.version.outputs.NEW_VERSION}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
    
      - name: Update version in POM
        run: mvn versions:set -DnewVersion=$NEW_VERSION

      - name: Create a new tag ${{needs.version.outputs.NEW_VERSION}}
        if: ${{env.target_environment=='production'}}
        run: |
          git config user.email "robertasvi@users.noreply.github.com"
          git config user.name "robertasvi"
          git add -A
          git commit -a -m "Version increment $NEW_VERSION"
          git push origin master
          git tag $NEW_VERSION
          git push --follow-tags
          git push --tags

      - name: Build with Maven
        run: mvn -B package --file pom.xml
    